{"version":3,"sources":["components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","Context","React","createContext","reducer","state","action","type","Object","objectSpread","track_list","payload","heading","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","message","body","catch","err","console","log","props","children","Component","Consumer","Spinner","src","alt","style","width","margin","display","Track","track","artist_name","track_name","album_name","react_router_dom","to","track_id","Tracks","undefined","Fragment","map","item","tracks_Track","Search","trackTitle","findTrack","e","preventDefault","defineProperty","target","name","onSubmit","bind","placeholder","onChange","Index","tracks_Search","tracks_Tracks","Lyrics","lyrics","match","params","id","_this$state","keys","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","explicit","updated_time","App","context_Provider","layout_Navbar","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99ebf122.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark mb-5\">\r\n      <span className=\"navbar-brand mb-0 h1 mx-auto\">LyricFinder</span>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst url = `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=us&f_has_lyrics=1&apikey=fb22bdce06ed86d7d5ce82d6158002fe`;\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SEARCH_TRACKS':\r\n    return {\r\n      ...state,\r\n      track_list: action.payload,\r\n      heading: \"Search Results\"\r\n    }; \r\n    default:\r\n     return state; \r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n      track_list: [],\r\n      heading: \"Top 10 Tracks\",\r\n      dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(url)\r\n        .then(res => { \r\n            this.setState({ track_list: res.data.message.body.track_list }); \r\n        })\r\n        .catch(err => console.log(err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n        </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n        <img \r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif\"\r\n            alt=\"Loading...\"\r\n            style={{ width: '400px', margin: '40px auto', display: 'block' }}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Track = (props) => {\r\n  const { track } = props;\r\n  return (\r\n    <div className=\"col-md-6\">\r\n      <div className=\"card mb-4 shadow-sm\">\r\n        <div className=\"card-body\">\r\n            <h5>{track.artist_name}</h5>\r\n            <p className=\"card-text\">\r\n                <strong><i className=\"fas fa-play\"></i> Track</strong>: {track.track_name}\r\n                <br />\r\n                <strong><i className=\"fas fa-compact-disc\"></i> Album</strong>: {track.album_name}\r\n            </p>\r\n            <Link to={`lyrics/track/${track.track_id}`} className=\"btn btn-dark btn-block\">\r\n                <i className=\"fas fa-chevron-right\"></i> View Lyrics\r\n            </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Track;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport Spinner from '../layout/Spinner';\r\nimport Track from '../tracks/Track';\r\n \r\nclass Tracks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n            const { track_list, heading } = value;\r\n            if (track_list === undefined || track_list.length === 0) {\r\n                return <Spinner />\r\n            } else {\r\n                return (\r\n                  <React.Fragment>\r\n                  <h3 className=\"text-center mb-4\">{heading}</h3>\r\n                  <div className=\"row\">\r\n                    {track_list.map(item => (\r\n                      <Track key={item.track.track_id} track={item.track} />\r\n                    ))}\r\n                  </div>\r\n                  </React.Fragment>\r\n                );\r\n            }\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tracks;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    trackTitle: \"\"\r\n  };\r\n\r\n  findTrack = (dispatch, e) => {\r\n    // Prevent the default from happening\r\n    e.preventDefault();\r\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=fb22bdce06ed86d7d5ce82d6158002fe`)\r\n    .then(res => { \r\n        // console.log(res.data);\r\n        dispatch({\r\n          type: 'SEARCH_TRACKS',\r\n          payload: res.data.message.body.track_list\r\n        }); \r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-4 p-4\">\r\n              <h1 className=\"display-4 text-center\">\r\n                <i className=\"fas fa-music\" /> Search for a song\r\n              </h1>\r\n              <p className=\"lead text-center\">\r\n                Get the lyrics for any song\r\n              </p>\r\n              <form onSubmit={this.findTrack.bind(this, dispatch)}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Song title..\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"trackTitle\"\r\n                    value={this.state.trackTitle}\r\n                    onChange={this.onChange.bind(this)}\r\n                  />\r\n                </div>\r\n                <button className=\"btn btn-primary btn-block btn-lg mb-5\" type=\"submit\">Get Track Lyrics</button>\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Tracks from '../tracks/Tracks';\r\nimport Search from '../tracks/Search';\r\n\r\n// The main container that will hold the 'Search' component & 'Tracks' component\r\nconst Index = () => {\r\n  return (\r\n    <React.Fragment>\r\n        <Search />\r\n        <Tracks />\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Index;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Lyrics extends Component {\r\n  state = {\r\n      track: {},\r\n      lyrics: {}\r\n  }\r\n  \r\n  componentDidMount() {\r\n    axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=fb22bdce06ed86d7d5ce82d6158002fe`)\r\n        .then(res => { \r\n            // console.log(res.data);\r\n            this.setState({ lyrics: res.data.message.body.lyrics });\r\n            /** After lyric data has been set, we make another API call to get track data  */\r\n            return axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=fb22bdce06ed86d7d5ce82d6158002fe`); \r\n        })\r\n        // This .then contains the result from the return statement above\r\n        .then(res => {\r\n            this.setState({ track: res.data.message.body.track });\r\n        })\r\n        .catch(err => console.log(err));\r\n  }\r\n  \r\n  render() {\r\n    const { track, lyrics } = this.state;\r\n    if (track === undefined || lyrics === undefined || \r\n        Object.keys(track).length === 0 || Object.keys(lyrics).length === 0) {\r\n        return <Spinner />\r\n    } else {\r\n        return (\r\n            <React.Fragment>\r\n                <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">Go Back</Link>\r\n                <div className=\"card\">\r\n                    <h5 className=\"card-header\">\r\n                        {track.track_name} by <span className=\"text-secondary\">{track.artist_name}</span>\r\n                    </h5>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\">\r\n                            {lyrics.lyrics_body}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <ul className=\"list-group mt-3\">\r\n                    <li className=\"list-group-item\">\r\n                        <strong>Album ID</strong>: {track.album_id}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <strong>Genre</strong>: {track.primary_genres.music_genre_list.length !== 0 ? \r\n                        track.primary_genres.music_genre_list[0].music_genre\r\n                        .music_genre_name : 'N/A'} \r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <strong>Explicit Words</strong>: {track.explicit === 0 ? \"No\" : \"Yes\"}\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <strong>Release Date</strong>: {track.updated_time}\r\n                    </li>\r\n                </ul>\r\n            </React.Fragment>\r\n        ); \r\n    }\r\n  }\r\n}\r\n\r\nexport default Lyrics;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Index from './components/layout/Index';\nimport Lyrics from './components/tracks/Lyrics';\nimport { Provider } from './context';\n\nclass App extends Component {\n  render() {\n    return (\n      // Provider needs to be the outermost wrapper since we're using Context API\n      <Provider>\n        { /* BrowserRouter needs to wrap around everything */ }\n        <Router>\n          <React.Fragment>\n            <Navbar />\n            {/* Everything below the Navbar needs to be within a container */}\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Index} />\n                <Route exact path=\"/lyrics/track/:id\" component={Lyrics} />\n              </Switch>\n            </div>\n          </React.Fragment>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}